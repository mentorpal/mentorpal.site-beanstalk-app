version: '3.2'
services:
  admin:
    image: uscictdocker/mentor-admin:4.1.0-alpha.18
    environment:
      - NODE_ENV
      - GRAPHQL_ENDPOINT=http://graphql:3001/graphql
    depends_on:
      - graphql
    volumes:
      - type: bind
        source: ./build/run/.env
        target: /app/.env
  classifier:
    image: uscictdocker/mentor-classifier-api:4.0.1-alpha.1
    depends_on:
      - redis
    links:
      - redis
    environment:
      - GRAPHQL_ENDPOINT=http://graphql:3001/graphql
      - MODEL_ROOT
      - SHARED_ROOT
      - STATUS_URL_FORCE_HTTPS
    volumes:
      - type: bind
        source: ./models
        target: /app/models
        read_only: true
      - type: bind
        source: ./shared
        target: /app/shared
        read_only: true
  chat:
    image: uscictdocker/mentor-client:4.1.0-alpha.3
    environment:
      - MENTOR_API_URL=/classifier
    depends_on:
      - classifier
    volumes:
      - type: bind
        source: ./build/run/.env
        target: /app/.env
  graphql:
    image: uscictdocker/mentor-graphql:4.1.0-alpha.8
    environment:
      - NODE_ENV
      - MONGO_URI
    volumes:
      - type: bind
        source: ./build/run/.env
        target: /app/.env
  nginx:
    image: nginx:1-alpine
    ports:
      - 80:80
    depends_on:
      - admin
      - chat
      - classifier
      - graphql
      - upload-api
    volumes:
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/nginx.conf
      - type: bind
        source: ./nginx/conf.d
        target: /etc/nginx/conf.d
  redis:
    image: "redis:6-alpine"
  training:
    image: uscictdocker/mentor-classifier:4.0.1-alpha.1
    depends_on:
      - graphql
      - redis
    entrypoint: /app/training_worker.sh
    environment:
      - GRAPHQL_ENDPOINT=http://graphql:3001/graphql
      - LOG_LEVEL_CLASSIFIER=DEBUG
      - MODEL_ROOT
      - SHARED_ROOT
    links:
      - graphql
      - redis
    volumes:
      - type: bind
        source: ./models
        target: /app/models
      - type: bind
        source: ./shared
        target: /app/shared
        read_only: true
  upload-redis:
    # this is a hack, need to figure out 
    # how to have multiple, independent
    # pub/sub instances share a redis via celery
    image: "redis:6-alpine"
  upload-api:
    image: uscictdocker/mentor-upload-api:4.1.0-alpha.10
    depends_on:
      - upload-redis
    environment:
      - CELERY_BROKER_URL=redis://upload-redis:6379/0
      - CELERY_RESULT_BACKEND=redis://upload-redis:6379/0
    links:
      - upload-redis
    volumes:
      - type: bind
        source: ./build/run/.env
        target: /app/.env
      - type: bind
        source: ./uploads
        target: /app/uploads
  upload-worker:
      image: uscictdocker/mentor-upload-worker:4.1.0-alpha.10
      depends_on:
        - graphql
        - redis
      environment:
        - CELERY_BROKER_URL=redis://upload-redis:6379/0
        - CELERY_RESULT_BACKEND=redis://upload-redis:6379/0
        - GRAPHQL_ENDPOINT=http://graphql:3001/graphql
        - TRANSCRIBE_MODULE_PATH=transcribe_aws
      links:
        - graphql
        - redis
      volumes:
        - type: bind
          source: ./build/run/.env
          target: /app/.env
        - type: bind
          source: ./uploads
          target: /app/uploads
